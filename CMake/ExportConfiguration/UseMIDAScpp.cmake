#
# This module is provided as MIDASCPP_USE_FILE by MIDASCPPConfig.cmake.  
# It can be INCLUDEd in a project to load the needed compiler and linker
# settings to use MIDASCPP:
#   FIND_PACKAGE(MIDASCPP REQUIRED)
#   INCLUDE(${MIDASCPP_USE_FILE})
#

IF(NOT MIDASCPP_USE_FILE_INCLUDED)
  SET(MIDASCPP_USE_FILE_INCLUDED 1)

  # Load the compiler settings used for MIDASCPP.
  IF(MIDASCPP_BUILD_SETTINGS_FILE)
    INCLUDE(${CMAKE_ROOT}/Modules/CMakeImportBuildSettings.cmake)
    CMAKE_IMPORT_BUILD_SETTINGS(${MIDASCPP_BUILD_SETTINGS_FILE})
  ENDIF(MIDASCPP_BUILD_SETTINGS_FILE)

  # Add compiler flags needed to use MIDASCPP.
  SET(CMAKE_C_FLAGS 
    "${CMAKE_C_FLAGS} ${MIDASCPP_REQUIRED_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS 
    "${CMAKE_CXX_FLAGS} ${MIDASCPP_REQUIRED_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS 
    "${CMAKE_EXE_LINKER_FLAGS} ${MIDASCPP_REQUIRED_EXE_LINKER_FLAGS}")
  SET(CMAKE_SHARED_LINKER_FLAGS 
    "${CMAKE_SHARED_LINKER_FLAGS} ${MIDASCPP_REQUIRED_SHARED_LINKER_FLAGS}")
  SET(CMAKE_MODULE_LINKER_FLAGS 
    "${CMAKE_MODULE_LINKER_FLAGS} ${MIDASCPP_REQUIRED_MODULE_LINKER_FLAGS}")

  # Add include directories needed to use MIDASCPP.
  INCLUDE_DIRECTORIES(${MIDASCPP_INCLUDE_DIRS})

  # Add link directories needed to use MIDASCPP.
  LINK_DIRECTORIES(${MIDASCPP_LIBRARY_DIRS})
  MESSAGE(${MIDASCPP_LIBRARY_DIRS})

  # Add cmake module path.
  SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${MIDASCPP_CMAKE_DIR}")

  # Same thing should probably be done for Qt and Phantom, but
  # I do not know enough about those packages at the moment

ENDIF(NOT MIDASCPP_USE_FILE_INCLUDED)
